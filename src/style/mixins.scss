@mixin flexBox($direction: row, $wrap: nowrap, $alignItems: center, $justifyContent: flex-start) {
  display: flex;
  flex-direction: $direction;
  flex-wrap: $wrap;
  align-items: $alignItems;
  justify-content: $justifyContent;
}

@mixin linearGradient($deg: 45deg, $startColor: #000000, $endColor: #ffffff) {
  background: linear-gradient($deg, $startColor, $endColor)
}

@mixin boxShadow {
  box-shadow: rgba(0, 0, 0, 0.117647) 0px 1px 6px, rgba(0, 0, 0, 0.117647) 0px 1px 4px;
}

@mixin transition {
  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
}

@mixin ellipsis {
  white-space: nowrap;
  overflow: hidden;
  overflow-x: hidden;
  text-overflow: ellipsis;
}

/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
@-moz-keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
@keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }

@mixin fadeInText($time: 0.5s) {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation:fadeIn ease 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation:fadeIn ease 1;
  animation:fadeIn ease 1;

  -webkit-animation-fill-mode: forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode: forwards;
  animation-fill-mode: forwards;

  -webkit-animation-duration:$time;
  -moz-animation-duration:$time;
  animation-duration:$time;
}
